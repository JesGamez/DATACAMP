-- 1) Temporal EDA, Variables y Date Manipulation
-- Introduccion del curso (VIDEO)

--1.1 Transacciones por dia

SELECT
  -- Select the date portion of StartDate
  CONVERT(DATE, StartDate) as StartDate,
  -- Measure how many records exist for each StartDate
  COUNT(ID) as CountOfRows 
FROM CapitalBikeShare 
-- Group by the date portion of StartDate
GROUP BY CONVERT(DATE, StartDate)
-- Sort the results by the date portion of StartDate
ORDER BY CONVERT(DATE, StartDate);

--1.2 ¿Segundos o sin segundos?

SELECT
	-- Contar el numero de identificadores
	COUNT(ID) AS Count,
    -- Usar DATEPART() para evaluar la segunda parte de StartDate
    "StartDate" = CASE WHEN DATEPART(SECOND, StartDate) = 0 THEN 'SECONDS = 0'
					   WHEN DATEPART(SECOND, StartDate) > 0 THEN 'SECONDS > 0' END
FROM CapitalBikeShare
GROUP BY
    -- Completa la declaracion CASE
	CASE WHEN DATEPART(SECOND, StartDate) = 0 THEN 'SECONDS = 0'
		 WHEN DATEPART(SECOND, StartDate) > 0 THEN 'SECONDS > 0' END

--1.3 ¿Qué día de la semana está más ocupado?

SELECT
    -- Seleccione el valor del dia de la semana para StartDate
	DATENAME(weekday, StartDate) as DayOfWeek,

    -- Calcular TotalTripHours
	SUM(DATEDIFF(second, StartDate, EndDate))/ 3600 as TotalTripHours 
FROM CapitalBikeShare 

-- Agrupar por dias de la semana
GROUP BY DATENAME(weekday, StartDate)

-- Ordene TotalTripHours en orden descendente
ORDER BY TotalTripHours DESC

--1.4 Encuentra los valores atípicos

SELECT
	-- Calcular TotalRideHours usando SUM() y DATEDIFF()
  	SUM(DATEDIFF(SECOND, StartDate, EndDate))/ 3600 AS TotalRideHours,

    -- Select the DATE portion of StartDate
  	CONVERT(DATE, StartDate) AS DateOnly,

    -- Selecciona el WEEKDAY
  	DATENAME(WEEKDAY, CONVERT(DATE, StartDate)) AS DayOfWeek 
FROM CapitalBikeShare

-- Solo incluye sabado
WHERE DATENAME(WEEKDAY, StartDate) = 'Saturday' 
GROUP BY CONVERT(DATE, StartDate);

--1.5 Variables para datos de fecha y hora (VIDEO)

--1.6 DECLARAR Y REPARAR

-- Crear @ShiftStartTime
DECLARE @ShiftStartTime AS time = '08:00 AM'

-- Crear @StartDate
DECLARE @StartDate AS date

-- Establecer StartDate en la primera StartDate de CapitalBikeShare
SET 
	@StartDate = (
    	SELECT TOP 1 StartDate 
    	FROM CapitalBikeShare 
    	ORDER BY StartDate ASC
		)

-- Crear ShiftStartDateTime
DECLARE @ShiftStartDateTime AS datetime

-- Cast StartDate y ShiftStartTime a tipos de datos de fecha y hora
SET @ShiftStartDateTime = CAST(@StartDate AS datetime) + CAST(@ShiftStartTime AS datetime) 

SELECT @ShiftStartDateTime

-- 1.7 DECLARAR UN TABLE

-- Declare @Shifts como una TABLE
DECLARE @Shifts TABLE(
    -- Crear columna StartDateTime 
	StartDateTime datetime,
    -- Crear columna EndDateTime
	EndDateTime datetime)
-- Rellenar @Shifts
INSERT INTO @Shifts (StartDateTime, EndDateTime)
	SELECT '3/1/2018 8:00 AM', '3/1/2018 4:00 PM' 
SELECT * 
FROM @Shifts

--1.8 INSERT INTO @TABLE

-- Declare @RideDates
DECLARE @RideDates TABLE(
    -- Crear RideStart
	RideStart date,
    -- Crear RideEnd
	RideEnd date)
-- Completar @RideDates
INSERT INTO @RideDates(RideStart, RideEnd)
-- seleccionar los valores de fecha unicos de StartDate y EndDate
SELECT DISTINCT
    -- Cast StartDate como fecha
	CAST(StartDate as date),
    -- Cast EndDate como fecha
	CAST(EndDate as date) 
FROM CapitalBikeShare 
SELECT * 
FROM @RideDates

--1.9 Manipulacion de la fecha (VIDEO)

--1.10 Los parámetros importan con DATEDIFF
-- 5 dias,0 semanas,1 mes

--1.11 Primer día del mes
-- Encuentra el primer dia del mes actual
SELECT DATEADD(month, DATEDIFF(month, 0, GETDATE()), 0)